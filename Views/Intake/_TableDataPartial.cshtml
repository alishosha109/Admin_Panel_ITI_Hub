@{
    var numOfStudsInEachIntake = (List<int>)ViewData["NumOfStudsInEachIntake"];
    var intakeList = ((IEnumerable<Admin_Panel_ITI.Models.Intake>)Model).ToList();
}


@*style for the modal*@
<style>
    .modal {
        z-index: 10000;
    }
    .modal.fade .modal-dialog {
        transform: translate(0, -50px);
        opacity: 0;
        transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
            z-index: 5;
    }

    .modal.fade.show .modal-dialog {
        transform: translate(0, 0);
        opacity: 1;
            z-index: 10000;
    }

    .modal-backdrop {
        z-index: 5;
    }

    .modal-content {
        z-index: 10006;
    }

</style>





    <div id ="partialTable">
    <div class="row">
        <table class="table table-hover intake-table" id="myTable">
            <thead class="table-secondary">
                <tr>
                    <th>@*<input type="checkbox" name="all" id="all" class="all" onclick="checkUncheck(this)">*@</th>
                    <th>
                        Name
                        <svg onclick="sortTable(1)" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
                            <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z" />
                        </svg>
                    </th>
                    <th>
                        Duration (M)
                        <svg onclick="sortTable(2)" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
                            <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z" />
                        </svg>
                    </th>
                    <th>
                        No.of Students
                        <svg onclick="sortTable(3)" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
                            <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z" />
                        </svg>
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < intakeList.Count; i++)
                {
                    <tr >
                        <td><input type="checkbox" name="selectedIntakeIds[]" class="intake-checkbox" value="@intakeList[i].ID"></td>
                        <td style="cursor: pointer;" onclick="editIntake(@intakeList[i].ID)">@intakeList[i].Name</td>
                        <td style="cursor: pointer;" onclick="editIntake(@intakeList[i].ID)">@intakeList[i].Duration</td>
                        <td>@numOfStudsInEachIntake[i]</td>
                        <td style="padding: 5px 8px">
                            <a asp-action="edit" asp-route-id="@intakeList[i].ID">
                                <img style='width: 20px; height: 20px;' src='~/assets/images/edit.png' alt='details'>
                            </a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <div class="footer">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-end">
                <li class="page-item @(ViewBag.PageNumber <= 1 ? "disabled" : "")">
                    <a class="page-link" href="#" id="prevPageBtn">Previous</a>
                </li>


                <li class="page-item active">
                    <a class="page-link" href="#">
                        @{
                            if(ViewBag.PageNumber == 0)
                            {
                                ViewBag.PageNumber++;

                            }
                        }
                        @ViewBag.PageNumber
                    </a>
                </li>

                <li class="page-item">
                    <a class="page-link" href="#" id="nextPageBtn">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>


<script>
    // Function to handle the "Next" button click event
    $('#nextPageBtn').on('click', function (e) {
        e.preventDefault();
        selectedDuration = $(this).data('duration-value') || @ViewBag.duration; // Get the selected intake ID
        console.log("herererer");
        var nextPage = @ViewBag.PageNumber +1; // Get the previous page number

        // Make an AJAX call to the UpdateTableData action with the previous page number
        $.ajax({
            url: '@Url.Action("UpdateTableData", "Intake")', // Use Url.Action to generate the correct URL
            type: 'GET',
            data: { duration: selectedDuration, pageNumber: nextPage }, // Pass the selected intake ID and previous page number as parameters
            success: function (result) {
                // Replace the content of the partialTable div with the updated HTML
                $('#partialTable').html(result);

                
                // Disable the "Prev" button if needed (you may need to add logic here)
                // Example: if (prevPage <= 0) { $('#prevPageBtn').addClass('disabled'); }
            },
            error: function () {
                alert('Error occurred while fetching data.');
            }
        });
    });


    // Function to handle the "Prev" button click event
    $('#prevPageBtn').on('click', function (e) {
        e.preventDefault();
        selectedDuration = $(this).data('duration-value') || @ViewBag.duration; // Get the selected intake ID

        var prevPage = @ViewBag.PageNumber -1; // Get the previous page number

        // Make an AJAX call to the UpdateTableData action with the previous page number
        $.ajax({
            url: '@Url.Action("UpdateTableData", "Intake")', // Use Url.Action to generate the correct URL
            type: 'GET',
            data: { duration: selectedDuration, pageNumber: prevPage }, // Pass the selected intake ID and previous page number as parameters
            success: function (result) {
                // Replace the content of the partialTable div with the updated HTML
                $('#partialTable').html(result);


                 //Disable the "Prev" button if needed (you may need to add logic here)
                if (nextPage <= 0) {
                    $('#prevPageBtn').addClass('disabled');
                } else {
                    $('#prevPageBtn').removeClass('disabled');
                }
            },
            error: function () {
                alert('Error occurred while fetching data.');
            }
        });
    });



    

    $('.customdeletebtn_kordy').off('click').on('click', function () {

        // Get the selected checkboxes
        var selectedIntakeIds = $('input[name="selectedIntakeIds[]"]:checked').map(function () {
            return $(this).val();
        }).get();


        if (selectedIntakeIds.length === 0) {
            alert("Please select at least one intake to delete.");
            return;
        }

        // Get the intake ID and page number from the hidden input fields
        var duration = parseInt(@ViewBag.duration);
        var pageNumber = parseInt(@ViewBag.PageNumber);

        // Make an AJAX POST request to the Delete action with parameters
        $.ajax({
            url: '@Url.Action("Delete", "Intake")',
            type: 'GET',
            traditional: true, // Use traditional serialization for arrays
            data: {
                selectedIntakeIds: selectedIntakeIds,
                duration: duration,
                pageNumber: pageNumber
            },
            success: function (result) {
                alert("Intakes with any number of students will not be deleted");
                $('#partialTable').html(result);
            },
            error: function () {
                // Handle errors here
                alert('Error occurred while deleting data.');
            }
        });
    });

    function editIntake(intakeID) {
        window.location.href = '/Intake/Edit/' + intakeID; // Replace with the correct URL format
    }

</script>


